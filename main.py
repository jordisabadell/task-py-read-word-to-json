from docx2python import docx2python
import random

posts = []
num_post = 0

class Post:
    title = ""
    date = ""
    content = []
    comment = []

    def __init__(self, title, date, content, comment):
        self.title = title
        self.date = date
        self.content = content
        self.comment = comment

    def exportJson(self):
        convert_month_table = {
            "de gener de ":     "01",
            "de febrer de ":    "02",
            "de març de ":      "03",
            "d’abril de ":      "04",
            "de maig de ":      "05",
            "de juny de ":      "06",
            "de juliol de ":    "07",
            "d’agost de ":      "08",
            "de setembre de ":  "09",
            "d’octubre de ":    "10",
            "de novembre de ":  "11",
            "de desembre de ":  "12",
        }

        date = self.date.split(',')[1]

        # get number of month
        month = date[date.find('d'):]
        month = month[:month.rfind('e')+2]
        month = convert_month_table[month]

        # get day
        day = date[:date.find('d')-1]

        # get year
        year = date[date.rfind('de ')+3:]

        # create publish date i.eg: 2000-01-01T00:01:00+00:00
        if len(day[1:]) == 1:
            day = "0" + day[1:]
        else:
            day = day[1:]
        
        # generate time
        hour = str(random.randint(6,23))
        if(len(hour)==1):
            hour = "0" + hour
        min = str(random.randint(0,59))
        if(len(min)==1):
            min = "0" + min
        sec = str(random.randint(0,59))
        if(len(sec)==1):
            sec = "0" + sec
        
        # date
        date = year + "-" + month + "-" + day + "T" + hour + ":" + min + ":" + sec + "+01:00"

        # title 
        title = self.title

        # content
        content = ""
        for phrase in self.content:
            content += phrase + "<br>"

        # coments ul/li list
        if(len(self.comment)>0):
            content += "<br><b>Comentaris:</b><br><ul>"
            for phrase in self.comment:
                if phrase!='':
                    content += "<li>" + phrase + "</li>"
            content += "</ul></br>"       

        # add post
        posts.append('{"published":"' + date + '", "title":"' + title.replace('"', '\\"') + '", "content":"' + content.replace('"', '\\"') + '", "labels":["autogenerated"]}')

def savePost(post):
    # get post in json format
    post.exportJson()
    
    # count
    global num_post
    num_post = num_post + 1
    
    return True

# extract docx content
result = docx2python('*** your Docx file ***', html=True)

next_line_is_date = False
next_line_is_comment = False

# content is on level 4
for l1 in result.body:
    for l2 in l1:
        for l3 in l2:
            for l4 in l3:
                # new post
                if(l4.find("__#__")==0): # title starts with '__#__' i.eg: __#__Sabadell - Puig de la Creu en BTT
                    
                    # exists object 'post'?
                    try:
                        post
                        savePost(post)

                        next_line_is_date = False
                        next_line_is_comment = False

                    except NameError:
                        print #first post do nothing

                    # initialize object
                    post = Post(l4[5:], '', [], [])
                    
                    next_line_is_date = True
                else:
                    if(next_line_is_date): # date
                        post.date = l4
                        next_line_is_date = False
                    elif(next_line_is_comment):
                        post.comment.append(l4) # comment
                    else:
                        if(l4=="Comentaris:"):
                            next_line_is_comment = True # init comment var
                        else:
                            post.content.append(l4) # content
                            
savePost(post) #save last post

# write json file
f = open("posts.json", "w", encoding='utf8')
f.write("[")
for i, post in enumerate(posts):
    if i>0:
        f.write(",")    
    f.write(post)
f.write("]")
f.close()

print("Done!", num_post)